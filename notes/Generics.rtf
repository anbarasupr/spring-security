{\rtf1\adeflang1097\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f34\fbidi \froman\fcharset1\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f39\fbidi \fmodern\fcharset0\fprq1{\*\panose 020b0609020204030204}Consolas;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}
{\fbimajor\f31503\fbidi \fnil\fcharset1\fprq2{\*\panose 02000400000000000000}Latha;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \fnil\fcharset1\fprq2{\*\panose 02000400000000000000}Latha;}{\f40\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f41\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f43\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f44\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f45\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f46\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f47\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f48\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f410\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\f411\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\f413\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\f414\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f417\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\f418\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}
{\f430\fbidi \fmodern\fcharset238\fprq1 Consolas CE;}{\f431\fbidi \fmodern\fcharset204\fprq1 Consolas Cyr;}{\f433\fbidi \fmodern\fcharset161\fprq1 Consolas Greek;}{\f434\fbidi \fmodern\fcharset162\fprq1 Consolas Tur;}
{\f437\fbidi \fmodern\fcharset186\fprq1 Consolas Baltic;}{\f438\fbidi \fmodern\fcharset163\fprq1 Consolas (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;\red127\green0\blue85;\red106\green62\blue62;\red42\green0\blue255;\red0\green0\blue192;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1097 
\ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1097 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 
\snext11 \ssemihidden \sunhideused \sqformat Normal Table;}}{\*\rsidtbl \rsid4792566\rsid8345746\rsid10371140}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info
{\operator Priya}{\creatim\yr2018\mo8\dy11\hr20\min4}{\revtim\yr2018\mo8\dy11\hr20\min9}{\version4}{\edmins5}{\nofpages9}{\nofwords2013}{\nofchars11499}{\nofcharsws13486}{\vern32859}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/word
ml}}\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves1\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot8345746 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1097 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Generics:
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 1) Introduction
\par \hich\af37\dbch\af31505\loch\f37 2) Generic Classes
\par \hich\af37\dbch\af31505\loch\f37 3) Bounded Types
\par \hich\af37\dbch\af31505\loch\f37 4) Generic Methods and Wild card Characters (?)
\par \hich\af37\dbch\af31505\loch\f37 5) Communication with Non Generic Code
\par \hich\af37\dbch\af31505\loch\f37 6) Conclusion}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Objective: 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 To Provide - }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 
Type Safety and to resolve Type Casting problems in Collections
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Arrays are type safety and we can give the guarantee for the type of elements present inside the array.
\par \hich\af37\dbch\af31505\loch\f37 But Collections does not provide the type safety.}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par -----------------------------------------------------------------------------------------
\par \hich\af37\dbch\af31505\loch\f37 String[] s\hich\af37\dbch\af31505\loch\f37 =new String[100];
\par \hich\af37\dbch\af31505\loch\f37 s[0]="anbu";
\par \hich\af37\dbch\af31505\loch\f37 s[1]=new Integer(10); -> Throw Incompatible Type Error at }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Compile }{\rtlch\fcs1 \af37 \ltrch\fcs0 
\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 time
\par -----------------------------------------------------------------------------------------
\par \hich\af37\dbch\af31505\loch\f37 List l=new ArrayList();
\par \hich\af37\dbch\af31505\loch\f37 l.add("anub");
\par \hich\af37\dbch\af31505\loch\f37 l.add(new Integer(10));}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37  
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 String s=l.get(1); Throws ClassCastException at }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af37\dbch\af31505\loch\f37 runtime}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par -----------------------------------------------------------------------------------------
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Failing the program at compile time  - Array
\par \hich\af37\dbch\af31505\loch\f37 Failing the program at runtime(While type casting) - Collections
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 -----------------------------------------------------------------------------------------
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 To provide Type safety in Collections:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 List<String> l=new ArrayList<>();
\par \hich\af37\dbch\af31505\loch\f37 l.add("anub"); 
\par \hich\af37\dbch\af31505\loch\f37 l.add(new Integer(10));  -> throws Compile time error}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Also at the time of retrieval, we are not required to preform type casting.
\par \hich\af37\dbch\af31505\loch\f37 String name=l.get(0);
\par -------------------------------------------------------------------------------------------
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Declarations:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Polymorphism concept applicable only for the base ty\hich\af37\dbch\af31505\loch\f37 pe and not for the parameter type.
\par \hich\af37\dbch\af31505\loch\f37 Polymorphism - Usage of Parent reference to hold child Objects is the concept of Polymorphism.
\par 
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<String>=new ArrayList<String>();
\par \hich\af37\dbch\af31505\loch\f37 List<String>=new ArrayList<String>();
\par \hich\af37\dbch\af31505\loch\f37 Collection<String>=new ArrayList<String>();
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<Object>=new ArrayList<String>(); - > Incompatible Type Error (Found ArrayList<String>, required ArrayList<Object>)
\par 
\par \hich\af37\dbch\af31505\loch\f37 Collections hold only Object type not Primitive type
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8345746 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Based on our requirement, we can define generics not only for Collections bu\hich\af37\dbch\af31505\loch\f37 t also other Class levels too.

\par 
\par \hich\af37\dbch\af31505\loch\f37 Example:
\par \hich\af37\dbch\af31505\loch\f37 Class Account<T>\{\}
\par \hich\af37\dbch\af31505\loch\f37 Account<Gold> g=new Account<Gold>();
\par \hich\af37\dbch\af31505\loch\f37 Account <Platinum> g=new Account <Platinum>();
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 FullExample:
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 package}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39  durgasoft.generic;}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 public}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39  }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 class}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  GenericDemo \{}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 public}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 static}{
\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 
void}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  main(String }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 args}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 [])\{}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 

\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab \hich\af39\dbch\af31505\loch\f39 Gen<String> }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 g}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 =}{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 
\b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 new}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  Gen<String>(}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf19\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 "anbu"}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 );}{
\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 g}{\rtlch\fcs1 \af39\afs20 
\ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .show();}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab \hich\af39\dbch\af31505\loch\f39 System.}{\rtlch\fcs1 \ab\ai\af39\afs20 \ltrch\fcs0 \b\i\f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 out}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .println(}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf19\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 "Value:"}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 +}{\rtlch\fcs1 \af39\afs20 
\ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 g}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .getObj());}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab \hich\af39\dbch\af31505\loch\f39 Gen<Integer> }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\highlight7\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 i}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 =}{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 
\b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 new}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  Gen<Integer>(10);}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\highlight16\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 i}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .show();}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab \hich\af39\dbch\af31505\loch\f39 System.}{\rtlch\fcs1 \ab\ai\af39\afs20 \ltrch\fcs0 \b\i\f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 out}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .println(}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf19\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 "Value:"}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 +}{\rtlch\fcs1 \af39\afs20 
\ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\highlight16\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 i}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .getObj());}{
\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \}}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \}}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 class}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39  Gen<T>\{}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \hich\af39\dbch\af31505\loch\f39 T }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 obj}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 ;}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 

\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \hich\af39\dbch\af31505\loch\f39 Gen(T }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 obj}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 )\{}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 

\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 this}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 .}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 obj}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 =}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf18\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 obj}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 ;\tab \tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \}}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 public}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 void}{
\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  show()\{}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab \hich\af39\dbch\af31505\loch\f39 System.}{\rtlch\fcs1 \ab\ai\af39\afs20 \ltrch\fcs0 \b\i\f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af39\dbch\af31505\loch\f39 out}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .println(}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf19\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 "Type:"}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 +}{\rtlch\fcs1 \ab\af39\afs20 
\ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 this}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 .}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 
\f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 obj}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 .getClass().getTypeName());}{
\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \}}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 public}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  T getObj()\{}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab }{\rtlch\fcs1 \ab\af39\afs20 \ltrch\fcs0 \b\f39\fs20\cf17\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 return}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39  }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf20\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 obj}{\rtlch\fcs1 
\af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 ;}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \tab \}\tab }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \}}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Output:
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 Type:java.lang.String}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 Value:anbu}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 Type:java.lang.Integer}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\cf1\lang9\langfe1033\langnp9\insrsid4792566 \hich\af39\dbch\af31505\loch\f39 Value:10}{\rtlch\fcs1 \af39\afs20 \ltrch\fcs0 \f39\fs20\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid8345746 
\par 
\par 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Generic Types:
\par 
\par \hich\af37\dbch\af31505\loch\f37 1) UnBounded Type:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Class Test<T>\{\}
\par \hich\af37\dbch\af31505\loch\f37 Here T is a TypeParameter and we can take any java identifier but it is the convention to use T.
\par 
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 2) Bounded Types:
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 We can bound the type parameter for a particular range by using }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 
\b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 extends }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 keyword. Such types are called bounded types
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Bounded Type\hich\af37\dbch\af31505\loch\f37 :
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Class Test <T extends Number>\{
\par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 public static void main()\{
\par }\pard \ltrpar\ql \li1440\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin1440\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 T a,b;
\par \hich\af37\dbch\af31505\loch\f37 sop(a+b);
\par \hich\af37\dbch\af31505\loch\f37 sop(a*b);
\par \hich\af37\dbch\af31505\loch\f37 sop(a/b);
\par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \}
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 Above Bounded Type Class functionality is used only for Arithmetic operations which is meant for only Number types and not for other reference types.
\par \hich\af37\dbch\af31505\loch\f37 So we limit or bound the parameter type to a particular range i.e which is a child class of Number class.
\par 
\par \hich\af37\dbch\af31505\loch\f37 Byte,}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8345746 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af37\dbch\af31505\loch\f37 Short, Integer, Long,}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8345746 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af37\dbch\af31505\loch\f37 Float,}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8345746 \hich\af37\dbch\af31505\loch\f37  }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af37\dbch\af31505\loch\f37 Double are c}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid8345746 \hich\af37\dbch\af31505\loch\f37 hild class of Number Class. Onl}{\rtlch\fcs1 \af37 \ltrch\fcs0 
\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 y these classes are allowed for above bounded class.
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Valid Syntax:
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Un\hich\af37\dbch\af31505\loch\f37 Bounded Type Syntax:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Class Test<T>\{\}
\par 
\par \hich\af37\dbch\af31505\loch\f37 Test<Integer> t1=new Test<Integer>();
\par \hich\af37\dbch\af31505\loch\f37 Test<String> t2=new Test<String>();
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Bounded Type Syntax:
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 1) Class Test<T extends Number>\{\}
\par \hich\af37\dbch\af31505\loch\f37 We can pass Number or its child classes like Integer,Double etc.
\par \hich\af37\dbch\af31505\loch\f37  
\par \hich\af37\dbch\af31505\loch\f37 Example:
\par \hich\af37\dbch\af31505\loch\f37 Class Test <T extends Number>\{\}
\par \hich\af37\dbch\af31505\loch\f37 Test <Integer> t1=new Test<Integer>();  - OK
\par \hich\af37\dbch\af31505\loch\f37 Test <String> t2 = new Test<String>(); - Compile Error-> Type Parameter String is not ints Bound
\par 
\par \hich\af37\dbch\af31505\loch\f37 2) Class Test<T extends X>\{\}
\par \hich\af37\dbch\af31505\loch\f37 here X can be either Interface or Class type.
\par \hich\af37\dbch\af31505\loch\f37 If X i\hich\af37\dbch\af31505\loch\f37 s Class, then as a type parameter we can pass either X type or its Child classes.
\par \hich\af37\dbch\af31505\loch\f37 If X is Interface, then as a type parameter we can pass either X type or its implementation classes.
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Example:
\par \hich\af37\dbch\af31505\loch\f37 Class Test <T extends Runnable>\{\}
\par 
\par \hich\af37\dbch\af31505\loch\f37 Test <Runnable> t1=new Test<\hich\af37\dbch\af31505\loch\f37 Runnable>(); - OK
\par \hich\af37\dbch\af31505\loch\f37 Test <Thread> t1=new Test<Thread>(); - OK
\par \hich\af37\dbch\af31505\loch\f37 Test <Integer> t1=new Test<Integer>(); - Compile Error
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Bounded Type Combination:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 We can define bounded types even in combination also using }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 &}{\rtlch\fcs1 \af37 \ltrch\fcs0 
\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37  operator.
\par 
\par \hich\af37\dbch\af31505\loch\f37 Example:
\par \hich\af37\dbch\af31505\loch\f37 1) Class Test <T extends Number &\hich\af37\dbch\af31505\loch\f37  Runnable>\{\}
\par \hich\af37\dbch\af31505\loch\f37 Test <Runnable> t1=new Test<Runnable>(); - OK
\par \hich\af37\dbch\af31505\loch\f37 Test <Thread> t1=new Test<Thread>(); - OK
\par \hich\af37\dbch\af31505\loch\f37 Test <Integer> t1=new Test<Integer>(); - OK
\par 
\par \hich\af37\dbch\af31505\loch\f37 As a type  parameter, we can take anything which should be child class of Number and should implements Runnable Interface.
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Rules for Combination of Bunded Types:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Rule1: }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Combination of Interfaces
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 1) Class Test<T extends Runnable & Comparable>
\par 
\par \hich\af37\dbch\af31505\loch\f37 Rule2: }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Comb\hich\af37\dbch\af31505\loch\f37 ination of Interface and Class:
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 
Here, First Class name should be present and then followed by Interfaces. This order should be maintained in combination of interface and class because java allow only class first. 
\par \hich\af37\dbch\af31505\loch\f37 see [ Class A extends B implements C - Ok,\hich\af37\dbch\af31505\loch\f37  but Class A implements B extends C - Not Allowed].
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 1) Class Test<T extends Number & Runnable & Comparable> - OK
\par \hich\af37\dbch\af31505\loch\f37 2) Class Test<T extends Runnable & Number> - Wrong [Because, We have to take Class first and then followed by interface next. ]
\par 
\par \hich\af37\dbch\af31505\loch\f37 Rule1: }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Combination of classes is not exist:
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 It is not allowed because we cannot extends more than one class in java. Java do not allow multiple inheritance.
\par 
\par \hich\af37\dbch\af31505\loch\f37 Class Test<T exdends Number & Thread> - Not allowed [There is no more than one extends in java.  Class A \hich\af37\dbch\af31505\loch\f37 extends B,C]
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid10371140 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Note: We can define both  bounded and unbounded type only by using extends keyword and we cannot use implements and super keyword.
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Define any no of Type Parameters:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 We can provice any no of type parameters given below:
\par \hich\af37\dbch\af31505\loch\f37 Class Test <T>,
\par \hich\af37\dbch\af31505\loch\f37 Class \hich\af37\dbch\af31505\loch\f37 Test<K,V>
\par \hich\af37\dbch\af31505\loch\f37 Hashmap<K,V>\{\} -> Hashmap<String,Integer> map=new Hashmap<String,Integer>();
\par 
\par \hich\af37\dbch\af31505\loch\f37 Based on our requirement, w can declare any no of type parameters. All these parameters should be separated with comma.
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \tab \tab \tab }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 
GENERIC Methods and Wild Card Character (?)
\par 
\par \hich\af37\dbch\af31505\loch\f37 Previously we seen Using Generics i.e Type parameter  in defining class level. Now we are going to see passing generics to method level and invocation of generics. 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Method level: Passing Generics}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par \hich\af37\dbch\af31505\loch\f37 Passing generic referece to method level argumens:
\par 
\par \hich\af37\dbch\af31505\loch\f37 1) pub\hich\af37\dbch\af31505\loch\f37 lic void m1(ArrayList<String> l) -> We can call this method by passing Arraylist of only String type
\par 
\par \hich\af37\dbch\af31505\loch\f37 2) public void m1(ArrayList<?> l) -> We can call this method by passing Arraylist of any type. But within this method, We cannot add any values without kn\hich\af37\dbch\af31505\loch\f37 
owing the type butwe can add only null to the arraylist.
\par 
\par \hich\af37\dbch\af31505\loch\f37 l.add(null); - OK
\par \hich\af37\dbch\af31505\loch\f37 l.add("anbu"); - INVALID
\par \hich\af37\dbch\af31505\loch\f37 l.add(10); - INVALID
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Advantage of above method:
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 This method is suitable to perform readonly operation but not for write operation in arraylist cause we d\hich\af37\dbch\af31505\loch\f37 
ont knnow the exact type.
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 3) public void m1(ArrayList<? }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 
extends }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 X> l) 
\par 
\par \hich\af37\dbch\af31505\loch\f37 here X can be either Interface or Class type.
\par \hich\af37\dbch\af31505\loch\f37 If X is Class, then we can call this method by passing ArrayList of either X type or its }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Child }{
\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 classes.
\par \hich\af37\dbch\af31505\loch\f37 If X is Interface, then we can ca\hich\af37\dbch\af31505\loch\f37 ll this method by passing ArrayList of either X type or its implementation classes.
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 
But within the method, we cannot add anything to the list except null because we know the type of X exactly. It can be any child class or interface type 
\par 
\par \hich\af37\dbch\af31505\loch\f37 This method is aslo best suitable to perform readonly operation but not for write operation in arraylist cause we dont knnow the exact type.
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 4) public void m1(ArrayList <? }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 
\hich\af37\dbch\af31505\loch\f37 super }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 X> l)
\par 
\par \hich\af37\dbch\af31505\loch\f37 See: Super keyword is not allowed in defiining Class level Type param\hich\af37\dbch\af31505\loch\f37 eter But in Method level or Object Invocation it is fine.
\par 
\par \hich\af37\dbch\af31505\loch\f37 here X can be either Interface or Class type.
\par \hich\af37\dbch\af31505\loch\f37 If X is Class, then we can call this method by passing ArrayList of either X type or its }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Super }{
\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 classes.
\par \hich\af37\dbch\af31505\loch\f37 If X is Interface, then we can call this method\hich\af37\dbch\af31505\loch\f37  by passing ArrayList of either X type or Super class of  implementation  class of X.
\par 
\par \hich\af37\dbch\af31505\loch\f37 Consider:
\par \hich\af37\dbch\af31505\loch\f37 If  X is Runnable interface,
\par \hich\af37\dbch\af31505\loch\f37 Then it accept Runnable type or Super Class of implementation class of Runnable i.e Thread is the implementation class of Runnable\hich\af37\dbch\af31505\loch\f37 . and the Super class of Thread is Object class. 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Finally It accept either Runnable type or Object type( which is the Super Class of implementation class of Runnable )
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 but within this, we can add null and X type to the Arraylist.
\par \hich\af37\dbch\af31505\loch\f37 l.add(X);
\par \hich\af37\dbch\af31505\loch\f37 l.add(null);}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Ways of Creating generic instantiation:
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 ArrayList<String> l =new ArrayList<String>(); -> OK
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<?> l =new ArrayList<String>(); -> OK
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<?> l =new ArrayList<Integer>(); -> OK
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<? extends Number> l =new ArrayList<Integer>(); -> OK
\par 
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<? extends Number> l =new ArrayList<String>(); -> Compile Time Error [ Incompatable type, Found:ArrayList<String>, Required ArrayList<? extends Number>]
\par 
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<? super String> l =new ArrayList<Object>(); -> OK}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 ArrayList<?> l =new ArrayList<?>\hich\af37\dbch\af31505\loch\f37 
(); -> Compile Time Error [ unexpected type, Found:?, Required: Class or interface without bound>]
\par 
\par \hich\af37\dbch\af31505\loch\f37 ArrayList<?> l =new ArrayList<? extends Number>(); -> Compile Time Error [ unexpected type, Found:? extends Number,  Required: Class or interface without bo\hich\af37\dbch\af31505\loch\f37 und>]
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Note: Required is left hand side, Found is right hand side}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 .}
{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 
 The right hand side is the one which invokes objec. So we need to be clear in mentioning the exact type. But in left hand side,it is a place which is going to be hold he invoked object. It\hich\af37\dbch\af31505\loch\f37 
 can mention the specific type or use extends  or  super with wild card.
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 //We can use wild card with extends or super keyword. We can use Type parameter in Class level.
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 Declaring Type parameters:}{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par \hich\af37\dbch\af31505\loch\f37 We can declare type parameter either in Class level or m\hich\af37\dbch\af31505\loch\f37 ethod level.
\par 
\par \hich\af37\dbch\af31505\loch\f37 1) declaring the type parameter at class level just after the class name:
\par \hich\af37\dbch\af31505\loch\f37 Class Test<T>\{ 
\par \hich\af37\dbch\af31505\loch\f37 // We can use T TypeParameter  within this class
\par \}}{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par }{\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 2) declaring the type parameter at method level just before the return type:
\par \hich\af37\dbch\af31505\loch\f37 Class Test\{ 
\par }\pard \ltrpar\ql \li720\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin720\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 public <T>\hich\af37\dbch\af31505\loch\f37  void m1()\{
\par \hich\af37\dbch\af31505\loch\f37 // We can use T TypeParameter within this method
\par \}
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af37 \ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 various syntax for declaring the type parameter at method level
\par 
\par \hich\af37\dbch\af31505\loch\f37 public <T> void m1() ->OK
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Number> void m1() -> OK
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Comparable> void m1() -> OK
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Number & Comparable> void m1() -> OK
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Comparable & Runnable> void m1() -> OK
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Number & Comparable & Runnable> void m1() -> OK
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Comparable & Number> void m1() -> Wrong (Class should come f\hich\af37\dbch\af31505\loch\f37 irst)
\par \hich\af37\dbch\af31505\loch\f37 public <T extends Thread & Number> void m1() -> Wrong (do not extend more than one class)
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\lang9\langfe1033\langnp9\insrsid4792566 \hich\af37\dbch\af31505\loch\f37 If we Send generic object to non generic Area, then all the generic behaiours will be gone in non generic area.}{\rtlch\fcs1 \af37 
\ltrch\fcs0 \f37\lang9\langfe1033\langnp9\insrsid4792566 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Class Test\{
\par \tab \hich\af37\dbch\af31505\loch\f37 public static void main(String\hich\af37\dbch\af31505\loch\f37 [] args)\{
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 //generic area scope
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 Arraylist<String> l=new Arraylist<String>();
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add("anbu");
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add("ravi");
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add(10); -> Compile Error
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 m1(l);
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add(10.5); -> Compile Error
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add("pr");
\par \tab \tab 
\par \tab \}
\par 
\par \tab \hich\af37\dbch\af31505\loch\f37 // non generic area - m1()
\par \tab \hich\af37\dbch\af31505\loch\f37 public void m1(Arraylist l)\{
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add(10);
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add(10.5);
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add("hello");
\par \tab \tab \hich\af37\dbch\af31505\loch\f37 l.add(true);
\par \tab \}
\par 
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 Generic Concept only at Compile level and It is not there ar runtime: To prove that:
\par 
\par \hich\af37\dbch\af31505\loch\f37 The main purpose of generics is to provide type safety and to resolve typ\hich\af37\dbch\af31505\loch\f37 
e casting problems. Type safety and Type Casting both are applicable at compile time. hence generics concept also applicable only at compile time but not at runtime. At the time of compilation, at the last step generics syntax will be removed. And hence f
\hich\af37\dbch\af31505\loch\f37 o\hich\af37\dbch\af31505\loch\f37 r the JVM, generics systax will not be available.
\par 
\par \hich\af37\dbch\af31505\loch\f37 For the JVm point of view, there is no generics concept and the arraylist behaves like normal one only.
\par \hich\af37\dbch\af31505\loch\f37 Compiler Check reference type which is in left hand side.
\par \hich\af37\dbch\af31505\loch\f37 Example:
\par \hich\af37\dbch\af31505\loch\f37 Arraylist l=new Arraylist<String>(\hich\af37\dbch\af31505\loch\f37 ); -> the generic code given at right hand part will be removed at the last part of compilation. JVM treat this arraylist as a normal one
\par \hich\af37\dbch\af31505\loch\f37 l.add(10);
\par \hich\af37\dbch\af31505\loch\f37 l.add(10.5);
\par \hich\af37\dbch\af31505\loch\f37 l.add(true);
\par 
\par \hich\af37\dbch\af31505\loch\f37 output: [10, 10.5, true]
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Arraylist l=new Arraylist<String>();
\par \hich\af37\dbch\af31505\loch\f37 Arraylist l=new Arraylist<Integer>();
\par \hich\af37\dbch\af31505\loch\f37 Arraylist l=new Arraylist<Double>();
\par \hich\af37\dbch\af31505\loch\f37 Arraylist l=new Arraylist();
\par 
\par \hich\af37\dbch\af31505\loch\f37 All the above 4 declarations are equals at runtime . So there is no gennerics at runtime. Only at compile time , the compiler check the reference which\hich\af37\dbch\af31505\loch\f37 
 should have a equivalent match for right hand part based on the above rules that we learnt in this document for generics is applicable. 
\par 
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Arraylist<String> l=new Arraylist<String>();
\par \hich\af37\dbch\af31505\loch\f37 Arraylist<String> l=new Arraylist();
\par \hich\af37\dbch\af31505\loch\f37 Above 2 declareations are equals.\hich\af37\dbch\af31505\loch\f37  
\par \hich\af37\dbch\af31505\loch\f37 For these arraylist, only string objects we can add at compile time 
\par \hich\af37\dbch\af31505\loch\f37 or these arraylist, we can add only string type of objects beacuse the compiler checks the reference type in left hand part.
\par 
\par \hich\af37\dbch\af31505\loch\f37 Class Test\{
\par \tab \hich\af37\dbch\af31505\loch\f37 public void m1(ArayList<String> l)\{\}
\par \tab \hich\af37\dbch\af31505\loch\f37 publi\hich\af37\dbch\af31505\loch\f37 c void m1(ArayList<Integer> l)\{\}
\par \}
\par 
\par \hich\af37\dbch\af31505\loch\f37 For above Class while compilation, throws Compile time error says 
\par \hich\af37\dbch\af31505\loch\f37 name clash : Both methods have same erasure
\par 
\par \hich\af37\dbch\af31505\loch\f37 Erasure means - method signature after removing generics
\par 
\par 
\par \hich\af37\dbch\af31505\loch\f37 Reason:
\par \hich\af37\dbch\af31505\loch\f37 At Compile time,
\par \hich\af37\dbch\af31505\loch\f37 1) Compile code normally by considering generics
\par \hich\af37\dbch\af31505\loch\f37 2) Remove generics syntax
\par \hich\af37\dbch\af31505\loch\f37 3) Compile once again the resultant code
\par 
\par \hich\af37\dbch\af31505\loch\f37 So the resultant does not contain any generics and the final step of compilation remove all generics code and behaves normal code. So in ab\hich\af37\dbch\af31505\loch\f37 
ove m1(), after removing the generics in code compilation, both m1() will have same signature. So it throws above compile time error at third step of above code compilation.
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af37 \ltrch\fcs0 \b\f37\ul\lang9\langfe1033\langnp9\insrsid4792566 
\par }{\*\themedata 504b030414000600080000002100828abc13fa0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb6ac3301045f785fe83d0b6d8
72ba28a5d8cea249777d2cd20f18e4b12d6a8f843409c9df77ecb850ba082d74231062ce997b55ae8fe3a00e1893f354e9555e6885647de3a8abf4fbee29bbd7
2a3150038327acf409935ed7d757e5ee14302999a654e99e393c18936c8f23a4dc072479697d1c81e51a3b13c07e4087e6b628ee8cf5c4489cf1c4d075f92a0b
44d7a07a83c82f308ac7b0a0f0fbf90c2480980b58abc733615aa2d210c2e02cb04430076a7ee833dfb6ce62e3ed7e14693e8317d8cd0433bf5c60f53fea2fe7
065bd80facb647e9e25c7fc421fd2ddb526b2e9373fed4bb902e182e97b7b461e6bfad3f010000ffff0300504b030414000600080000002100a5d6a7e7c00000
00360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4fc7060abb08
84a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b63095120f88d94fbc
52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462a1a82fe353
bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f7468656d652f7468
656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b4b0d592c9c
070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b4757e8d3f7
29e245eb2b260a0238fd010000ffff0300504b03041400060008000000210096b5ade296060000501b0000160000007468656d652f7468656d652f7468656d65
312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87615b8116d8
a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad79482a9c04
98f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b5d8a314d3c
94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab999fb7b471
7509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9699640f671
9e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd5868b37a088d1
e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d60cf03ac1a5
193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f9e7ef3f2d1
17d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be15c308d3f2
8acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a99793849c26ae6
6252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d32a423279a
668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2af074481847
bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86e877f0034e
16bafb0e258ebb4faf06b769e888340b103d3311da9750aa9d0a1cd3e4efca31a3508f6d0c5c5c398602f8e2ebc71591f5b616e24dd893aa3261fb44f95d843b
5974bb5c04f4edafb95b7892ec1108f3f98de75dc97d5772bdff7cc95d94cf672db4b3da0a6557f70db629362d72bcb0431e53c6066acac80d699a6409fb44d0
8741bdce9c0e4971624a2378cceaba830b05366b90e0ea23aaa241845368b0eb9e2612ca8c742851ca251ceccc70256d8d87265dd96361531f186c3d9058edf2
c00eafe8e1fc5c509031bb4d680e9f39a3154de0accc56ae644441edd76156d7429d995bdd88664a9dc3ad50197c38af1a0c16d684060441db02565e85f3b966
0d0713cc48a0ed6ef7dedc2dc60b17e92219e180643ed27acffba86e9c94c78ab90980d8a9f0913ee49d62b512b79626fb06dccee2a432bbc60276b9f7dec44b
7904cfbca4f3f6443ab2a49c9c2c41476dafd55c6e7ac8c769db1bc399161ee314bc2e75cf8759081743be1236ec4f4d6693e5336fb672c5dc24a8c33585b5fb
9cc24e1d4885545b58463634cc5416022cd19cacfccb4d30eb45296023fd35a458598360f8d7a4003bbaae25e331f155d9d9a5116d3bfb9a95523e51440ca2e0
088dd844ec6370bf0e55d027a012ae264c45d02f708fa6ad6da6dce29c255df9f6cae0ec38666984b372ab5334cf640b37795cc860de4ae2816e95b21be5ceaf
8a49f90b52a51cc6ff3355f47e0237052b81f6800fd7b802239daf6d8f0b1571a8426944fdbe80c6c1d40e8816b88b8569082ab84c36ff0539d4ff6dce591a26
ade1c0a7f669880485fd484582903d284b26fa4e2156cff62e4b9265844c4495c495a9157b440e091bea1ab8aaf7760f4510eaa69a6465c0e04ec69ffb9e65d0
28d44d4e39df9c1a52ecbd3607fee9cec7263328e5d661d3d0e4f62f44acd855ed7ab33cdf7bcb8ae889599bd5c8b3029895b6825696f6af29c239b75a5bb1e6
345e6ee6c28117e73586c1a2214ae1be07e93fb0ff51e133fb65426fa843be0fb515c187064d0cc206a2fa926d3c902e907670048d931db4c1a44959d366ad93
b65abe595f70a75bf03d616c2dd959fc7d4e6317cd99cbcec9c58b34766661c7d6766ca1a9c1b327531486c6f941c638c67cd22a7f75e2a37be0e82db8df9f30
254d30c1372581a1f51c983c80e4b71ccdd28dbf000000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d652f74
68656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d363f24
51eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e3198
720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9850528
a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100828abc13fa0000001c0200001300000000000000000000000000
000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b000000000000000000000000
002b0100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c00000000000000000000000000140200007468
656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210096b5ade296060000501b000016000000000000000000
00000000d10200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b010000270000000000
00000000000000009b0900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000960a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;
\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;
\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdpriority1 \lsdlocked0 Default Paragraph Font;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e352e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffffec69d9888b8b3d4c859eaf6cd158be0f000000000000000000000000d002
860f8131d401feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}